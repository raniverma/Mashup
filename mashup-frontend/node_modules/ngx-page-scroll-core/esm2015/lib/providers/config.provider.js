/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { InjectionToken } from '@angular/core';
/** @type {?} */
export const NGXPS_CONFIG = new InjectionToken('ngxps_config');
/** @type {?} */
export const defaultPageScrollConfig = {
    _interval: 10,
    _minScrollDistance: 2,
    _logLevel: 1,
    namespace: 'default',
    verticalScrolling: true,
    duration: 1250,
    scrollOffset: 0,
    advancedInlineOffsetCalculation: false,
    interruptEvents: ['mousedown', 'wheel', 'DOMMouseScroll', 'mousewheel', 'keyup', 'touchmove'],
    interruptKeys: [' ', 'Escape', 'Tab', 'Enter', 'PageUp', 'PageDown', 'Home', 'End', 'ArrowUp', 'ArrowRight', 'ArrowLeft', 'ArrowDown'],
    interruptible: true,
    easingLogic: (/**
     * @param {?} t
     * @param {?} b
     * @param {?} c
     * @param {?} d
     * @return {?}
     */
    (t, b, c, d) => {
        // Linear easing
        return c * t / d + b;
    }),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLnByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LXBhZ2Utc2Nyb2xsLWNvcmUvIiwic291cmNlcyI6WyJsaWIvcHJvdmlkZXJzL2NvbmZpZy5wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFHL0MsTUFBTSxPQUFPLFlBQVksR0FBRyxJQUFJLGNBQWMsQ0FBbUIsY0FBYyxDQUFDOztBQUVoRixNQUFNLE9BQU8sdUJBQXVCLEdBQXFCO0lBQ3ZELFNBQVMsRUFBRSxFQUFFO0lBQ2Isa0JBQWtCLEVBQUUsQ0FBQztJQUNyQixTQUFTLEVBQUUsQ0FBQztJQUNaLFNBQVMsRUFBRSxTQUFTO0lBQ3BCLGlCQUFpQixFQUFFLElBQUk7SUFDdkIsUUFBUSxFQUFFLElBQUk7SUFDZCxZQUFZLEVBQUUsQ0FBQztJQUNmLCtCQUErQixFQUFFLEtBQUs7SUFDdEMsZUFBZSxFQUFFLENBQUMsV0FBVyxFQUFFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxZQUFZLEVBQUUsT0FBTyxFQUFFLFdBQVcsQ0FBQztJQUM3RixhQUFhLEVBQUUsQ0FBQyxHQUFHLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsUUFBUSxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsV0FBVyxFQUFFLFdBQVcsQ0FBQztJQUN0SSxhQUFhLEVBQUUsSUFBSTtJQUNuQixXQUFXOzs7Ozs7O0lBQUUsQ0FBQyxDQUFTLEVBQUUsQ0FBUyxFQUFFLENBQVMsRUFBRSxDQUFTLEVBQVUsRUFBRTtRQUNsRSxnQkFBZ0I7UUFDaEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDdkIsQ0FBQyxDQUFBO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3Rpb25Ub2tlbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUGFnZVNjcm9sbENvbmZpZyB9IGZyb20gJy4uL3R5cGVzL3BhZ2Utc2Nyb2xsLmNvbmZpZyc7XG5cbmV4cG9ydCBjb25zdCBOR1hQU19DT05GSUcgPSBuZXcgSW5qZWN0aW9uVG9rZW48UGFnZVNjcm9sbENvbmZpZz4oJ25neHBzX2NvbmZpZycpO1xuXG5leHBvcnQgY29uc3QgZGVmYXVsdFBhZ2VTY3JvbGxDb25maWc6IFBhZ2VTY3JvbGxDb25maWcgPSB7XG4gIF9pbnRlcnZhbDogMTAsXG4gIF9taW5TY3JvbGxEaXN0YW5jZTogMixcbiAgX2xvZ0xldmVsOiAxLFxuICBuYW1lc3BhY2U6ICdkZWZhdWx0JyxcbiAgdmVydGljYWxTY3JvbGxpbmc6IHRydWUsXG4gIGR1cmF0aW9uOiAxMjUwLFxuICBzY3JvbGxPZmZzZXQ6IDAsXG4gIGFkdmFuY2VkSW5saW5lT2Zmc2V0Q2FsY3VsYXRpb246IGZhbHNlLFxuICBpbnRlcnJ1cHRFdmVudHM6IFsnbW91c2Vkb3duJywgJ3doZWVsJywgJ0RPTU1vdXNlU2Nyb2xsJywgJ21vdXNld2hlZWwnLCAna2V5dXAnLCAndG91Y2htb3ZlJ10sXG4gIGludGVycnVwdEtleXM6IFsnICcsICdFc2NhcGUnLCAnVGFiJywgJ0VudGVyJywgJ1BhZ2VVcCcsICdQYWdlRG93bicsICdIb21lJywgJ0VuZCcsICdBcnJvd1VwJywgJ0Fycm93UmlnaHQnLCAnQXJyb3dMZWZ0JywgJ0Fycm93RG93biddLFxuICBpbnRlcnJ1cHRpYmxlOiB0cnVlLFxuICBlYXNpbmdMb2dpYzogKHQ6IG51bWJlciwgYjogbnVtYmVyLCBjOiBudW1iZXIsIGQ6IG51bWJlcik6IG51bWJlciA9PiB7XG4gICAgLy8gTGluZWFyIGVhc2luZ1xuICAgIHJldHVybiBjICogdCAvIGQgKyBiO1xuICB9LFxufTtcbiJdfQ==