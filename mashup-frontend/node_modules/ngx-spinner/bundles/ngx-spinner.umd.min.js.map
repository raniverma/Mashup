{"version":3,"sources":["ng://ngx-spinner/lib/ngx-spinner.service.ts","ng://ngx-spinner/lib/ngx-spinner.enum.ts","ng://ngx-spinner/lib/ngx-spinner.component.ts","ng://ngx-spinner/lib/ngx-spinner.module.ts"],"names":["NgxSpinnerService","this","spinnerObservable","Subject","prototype","show","next","hide","Injectable","args","providedIn","LOADERS","ball-8bits","ball-atom","ball-beat","ball-circus","ball-climbing-dot","ball-clip-rotate","ball-clip-rotate-multiple","ball-clip-rotate-pulse","ball-elastic-dots","ball-fall","ball-fussion","ball-grid-beat","ball-grid-pulse","ball-newton-cradle","ball-pulse","ball-pulse-rise","ball-pulse-sync","ball-rotate","ball-running-dots","ball-scale","ball-scale-multiple","ball-scale-pulse","ball-scale-ripple","ball-scale-ripple-multiple","ball-spin","ball-spin-clockwise","ball-spin-clockwise-fade","ball-spin-clockwise-fade-rotating","ball-spin-fade","ball-spin-fade-rotating","ball-spin-rotate","ball-square-clockwise-spin","ball-square-spin","ball-triangle-path","ball-zig-zag","ball-zig-zag-deflect","cog","cube-transition","fire","line-scale","line-scale-party","line-scale-pulse-out","line-scale-pulse-out-rapid","line-spin-clockwise-fade","line-spin-clockwise-fade-rotating","line-spin-fade","line-spin-fade-rotating","pacman","square-jelly-box","square-loader","square-spin","timer","triangle-skew-spin","NgxSpinnerComponent","spinnerService","_this","bdColor","size","color","fullScreen","showSpinner","divArray","divCount","spinnerSubscription","subscribe","flag","ngOnInit","onInputChange","ngOnChanges","changes","typeChange","type","sizeChange","currentValue","previousValue","getClass","Array","fill","map","x","i","sizeClass","toLowerCase","spinnerClass","ngOnDestroy","unsubscribe","Component","selector","template","Input","NgxSpinnerModule","NgModule","imports","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxSpinnerService {\n  /**\n   * Spinner observable\n   *\n   * @memberof NgxSpinnerService\n   */\n  public spinnerObservable = new Subject<boolean>();\n  /**\n   * Creates an instance of NgxSpinnerService.\n   * @memberof NgxSpinnerService\n   */\n  constructor() { }\n  /**\n   * To show spinner\n   *\n   * @memberof NgxSpinnerService\n   */\n  show() {\n    this.spinnerObservable.next(true);\n  }\n  /**\n   * To hide spinner\n   *\n   * @memberof NgxSpinnerService\n   */\n  hide() {\n    this.spinnerObservable.next(false);\n  }\n}\n","export const LOADERS = {\n  'ball-8bits': 16,\n  'ball-atom': 4,\n  'ball-beat': 3,\n  'ball-circus': 5,\n  'ball-climbing-dot': 4,\n  'ball-clip-rotate': 1,\n  'ball-clip-rotate-multiple': 2,\n  'ball-clip-rotate-pulse': 2,\n  'ball-elastic-dots': 5,\n  'ball-fall': 3,\n  'ball-fussion': 4,\n  'ball-grid-beat': 9,\n  'ball-grid-pulse': 9,\n  'ball-newton-cradle': 4,\n  'ball-pulse': 3,\n  'ball-pulse-rise': 5,\n  'ball-pulse-sync': 3,\n  'ball-rotate': 1,\n  'ball-running-dots': 5,\n  'ball-scale': 1,\n  'ball-scale-multiple': 3,\n  'ball-scale-pulse': 2,\n  'ball-scale-ripple': 1,\n  'ball-scale-ripple-multiple': 3,\n  'ball-spin': 8,\n  'ball-spin-clockwise': 8,\n  'ball-spin-clockwise-fade': 8,\n  'ball-spin-clockwise-fade-rotating': 8,\n  'ball-spin-fade': 8,\n  'ball-spin-fade-rotating': 8,\n  'ball-spin-rotate': 2,\n  'ball-square-clockwise-spin': 8,\n  'ball-square-spin': 8,\n  'ball-triangle-path': 3,\n  'ball-zig-zag': 2,\n  'ball-zig-zag-deflect': 2,\n  'cog': 1,\n  'cube-transition': 2,\n  'fire': 3,\n  'line-scale': 5,\n  'line-scale-party': 5,\n  'line-scale-pulse-out': 5,\n  'line-scale-pulse-out-rapid': 5,\n  'line-spin-clockwise-fade': 8,\n  'line-spin-clockwise-fade-rotating': 8,\n  'line-spin-fade': 8,\n  'line-spin-fade-rotating': 8,\n  'pacman': 6,\n  'square-jelly-box': 2,\n  'square-loader': 1,\n  'square-spin': 1,\n  'timer': 1,\n  'triangle-skew-spin': 1\n};\n","import { Component, OnDestroy, Input, OnInit, OnChanges, SimpleChanges, SimpleChange } from '@angular/core';\nimport { NgxSpinnerService } from './ngx-spinner.service';\nimport { Subscription } from 'rxjs';\nimport { LOADERS } from './ngx-spinner.enum';\n\n@Component({\n  selector: 'ngx-spinner',\n  templateUrl: 'ngx-spinner.component.html',\n  styleUrls: ['ngx-spinner.component.css']\n})\nexport class NgxSpinnerComponent implements OnDestroy, OnInit, OnChanges {\n  /**\n   * To set backdrop color('rgba(51,51,51,0.8)')\n   * Only supports RGBA color format\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() bdColor = 'rgba(51,51,51,0.8)';\n  /**\n   * To set spinner size\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() size = '';\n  /**\n   * To set spinner color('#fff')\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() color = '#fff';\n  /**\n   * To set type of spinner\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() type: string;\n  /**\n   * To enable/disable fullscreen mode\n   *\n   * @type {boolean}\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() fullScreen: boolean = true;\n  /**\n   * Class for spinner\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  spinnerClass: string;\n  /**\n   * Flag to show/hide spinner\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  showSpinner = false;\n  /**\n   * Subscription variable for spinner\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  spinnerSubscription: Subscription;\n  /**\n   * Array for spinner divs\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  divArray: Array<number> = [];\n  /**\n   * Counter for div\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  divCount = 0;\n  /**\n   * Creates an instance of NgxSpinnerComponent.\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  constructor(private spinnerService: NgxSpinnerService) {\n    this.spinnerSubscription = this.spinnerService.spinnerObservable.subscribe(flag => {\n      this.showSpinner = flag;\n    });\n  }\n  /**\n   * Initialization method\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  ngOnInit() {\n    this.onInputChange();\n  }\n  /**\n   * On changes event for input variables\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    const typeChange: SimpleChange = changes.type;\n    const sizeChange: SimpleChange = changes.size;\n\n    if (typeChange) {\n      if (typeof typeChange.currentValue !== 'undefined' && typeChange.currentValue !== typeChange.previousValue) {\n        if (typeChange.currentValue !== '') {\n          this.type = typeChange.currentValue;\n          this.onInputChange();\n        }\n      }\n    }\n\n    if (sizeChange) {\n      if (typeof sizeChange.currentValue !== 'undefined' && sizeChange.currentValue !== sizeChange.previousValue) {\n        if (sizeChange.currentValue !== '') {\n          this.size = sizeChange.currentValue;\n          this.onInputChange();\n        }\n      }\n    }\n  }\n  /**\n   * To get class for spinner\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  getClass(type = 'ball-scale-multiple', size = 'large'): string {\n    this.divCount = LOADERS[type];\n    this.divArray = Array(this.divCount).fill(0).map((x, i) => i);\n    let sizeClass = '';\n    switch (size.toLowerCase()) {\n      case 'small':\n        sizeClass = 'la-sm';\n        break;\n      case 'medium':\n        sizeClass = 'la-2x';\n        break;\n      case 'large':\n        sizeClass = 'la-3x';\n        break;\n      default:\n        break;\n    }\n    return 'la-' + type + ' ' + sizeClass;\n  }\n  /**\n   * After input variables chnage event\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  onInputChange() {\n    this.spinnerClass = this.getClass(this.type, this.size);\n  }\n  /**\n   * Component destroy event\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  ngOnDestroy() {\n    this.spinnerSubscription.unsubscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxSpinnerComponent } from './ngx-spinner.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [NgxSpinnerComponent],\n  exports: [NgxSpinnerComponent]\n})\nexport class NgxSpinnerModule { }\n"]}