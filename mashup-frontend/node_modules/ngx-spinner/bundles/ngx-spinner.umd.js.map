{"version":3,"file":"ngx-spinner.umd.js.map","sources":["ng://ngx-spinner/lib/ngx-spinner.service.ts","ng://ngx-spinner/lib/ngx-spinner.enum.ts","ng://ngx-spinner/lib/ngx-spinner.component.ts","ng://ngx-spinner/lib/ngx-spinner.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxSpinnerService {\n  /**\n   * Spinner observable\n   *\n   * @memberof NgxSpinnerService\n   */\n  public spinnerObservable = new Subject<boolean>();\n  /**\n   * Creates an instance of NgxSpinnerService.\n   * @memberof NgxSpinnerService\n   */\n  constructor() { }\n  /**\n   * To show spinner\n   *\n   * @memberof NgxSpinnerService\n   */\n  show() {\n    this.spinnerObservable.next(true);\n  }\n  /**\n   * To hide spinner\n   *\n   * @memberof NgxSpinnerService\n   */\n  hide() {\n    this.spinnerObservable.next(false);\n  }\n}\n","export const LOADERS = {\n  'ball-8bits': 16,\n  'ball-atom': 4,\n  'ball-beat': 3,\n  'ball-circus': 5,\n  'ball-climbing-dot': 4,\n  'ball-clip-rotate': 1,\n  'ball-clip-rotate-multiple': 2,\n  'ball-clip-rotate-pulse': 2,\n  'ball-elastic-dots': 5,\n  'ball-fall': 3,\n  'ball-fussion': 4,\n  'ball-grid-beat': 9,\n  'ball-grid-pulse': 9,\n  'ball-newton-cradle': 4,\n  'ball-pulse': 3,\n  'ball-pulse-rise': 5,\n  'ball-pulse-sync': 3,\n  'ball-rotate': 1,\n  'ball-running-dots': 5,\n  'ball-scale': 1,\n  'ball-scale-multiple': 3,\n  'ball-scale-pulse': 2,\n  'ball-scale-ripple': 1,\n  'ball-scale-ripple-multiple': 3,\n  'ball-spin': 8,\n  'ball-spin-clockwise': 8,\n  'ball-spin-clockwise-fade': 8,\n  'ball-spin-clockwise-fade-rotating': 8,\n  'ball-spin-fade': 8,\n  'ball-spin-fade-rotating': 8,\n  'ball-spin-rotate': 2,\n  'ball-square-clockwise-spin': 8,\n  'ball-square-spin': 8,\n  'ball-triangle-path': 3,\n  'ball-zig-zag': 2,\n  'ball-zig-zag-deflect': 2,\n  'cog': 1,\n  'cube-transition': 2,\n  'fire': 3,\n  'line-scale': 5,\n  'line-scale-party': 5,\n  'line-scale-pulse-out': 5,\n  'line-scale-pulse-out-rapid': 5,\n  'line-spin-clockwise-fade': 8,\n  'line-spin-clockwise-fade-rotating': 8,\n  'line-spin-fade': 8,\n  'line-spin-fade-rotating': 8,\n  'pacman': 6,\n  'square-jelly-box': 2,\n  'square-loader': 1,\n  'square-spin': 1,\n  'timer': 1,\n  'triangle-skew-spin': 1\n};\n","import { Component, OnDestroy, Input, OnInit, OnChanges, SimpleChanges, SimpleChange } from '@angular/core';\nimport { NgxSpinnerService } from './ngx-spinner.service';\nimport { Subscription } from 'rxjs';\nimport { LOADERS } from './ngx-spinner.enum';\n\n@Component({\n  selector: 'ngx-spinner',\n  templateUrl: 'ngx-spinner.component.html',\n  styleUrls: ['ngx-spinner.component.css']\n})\nexport class NgxSpinnerComponent implements OnDestroy, OnInit, OnChanges {\n  /**\n   * To set backdrop color('rgba(51,51,51,0.8)')\n   * Only supports RGBA color format\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() bdColor = 'rgba(51,51,51,0.8)';\n  /**\n   * To set spinner size\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() size = '';\n  /**\n   * To set spinner color('#fff')\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() color = '#fff';\n  /**\n   * To set type of spinner\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() type: string;\n  /**\n   * To enable/disable fullscreen mode\n   *\n   * @type {boolean}\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() fullScreen: boolean = true;\n  /**\n   * Class for spinner\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  spinnerClass: string;\n  /**\n   * Flag to show/hide spinner\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  showSpinner = false;\n  /**\n   * Subscription variable for spinner\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  spinnerSubscription: Subscription;\n  /**\n   * Array for spinner divs\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  divArray: Array<number> = [];\n  /**\n   * Counter for div\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  divCount = 0;\n  /**\n   * Creates an instance of NgxSpinnerComponent.\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  constructor(private spinnerService: NgxSpinnerService) {\n    this.spinnerSubscription = this.spinnerService.spinnerObservable.subscribe(flag => {\n      this.showSpinner = flag;\n    });\n  }\n  /**\n   * Initialization method\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  ngOnInit() {\n    this.onInputChange();\n  }\n  /**\n   * On changes event for input variables\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    const typeChange: SimpleChange = changes.type;\n    const sizeChange: SimpleChange = changes.size;\n\n    if (typeChange) {\n      if (typeof typeChange.currentValue !== 'undefined' && typeChange.currentValue !== typeChange.previousValue) {\n        if (typeChange.currentValue !== '') {\n          this.type = typeChange.currentValue;\n          this.onInputChange();\n        }\n      }\n    }\n\n    if (sizeChange) {\n      if (typeof sizeChange.currentValue !== 'undefined' && sizeChange.currentValue !== sizeChange.previousValue) {\n        if (sizeChange.currentValue !== '') {\n          this.size = sizeChange.currentValue;\n          this.onInputChange();\n        }\n      }\n    }\n  }\n  /**\n   * To get class for spinner\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  getClass(type = 'ball-scale-multiple', size = 'large'): string {\n    this.divCount = LOADERS[type];\n    this.divArray = Array(this.divCount).fill(0).map((x, i) => i);\n    let sizeClass = '';\n    switch (size.toLowerCase()) {\n      case 'small':\n        sizeClass = 'la-sm';\n        break;\n      case 'medium':\n        sizeClass = 'la-2x';\n        break;\n      case 'large':\n        sizeClass = 'la-3x';\n        break;\n      default:\n        break;\n    }\n    return 'la-' + type + ' ' + sizeClass;\n  }\n  /**\n   * After input variables chnage event\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  onInputChange() {\n    this.spinnerClass = this.getClass(this.type, this.size);\n  }\n  /**\n   * Component destroy event\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  ngOnDestroy() {\n    this.spinnerSubscription.unsubscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxSpinnerComponent } from './ngx-spinner.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [NgxSpinnerComponent],\n  exports: [NgxSpinnerComponent]\n})\nexport class NgxSpinnerModule { }\n"],"names":["Subject","Injectable","Component","Input","NgModule","CommonModule"],"mappings":"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"}
